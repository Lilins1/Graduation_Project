// Generated by gencpp from file pi_car/String.msg
// DO NOT EDIT!


#ifndef PI_CAR_MESSAGE_STRING_H
#define PI_CAR_MESSAGE_STRING_H

#include <ros/service_traits.h>


#include <pi_car/StringRequest.h>
#include <pi_car/StringResponse.h>


namespace pi_car
{

struct String
{

typedef StringRequest Request;
typedef StringResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct String
} // namespace pi_car


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::pi_car::String > {
  static const char* value()
  {
    return "c63e85f503b805d84df783e71c6bb0d2";
  }

  static const char* value(const ::pi_car::String&) { return value(); }
};

template<>
struct DataType< ::pi_car::String > {
  static const char* value()
  {
    return "pi_car/String";
  }

  static const char* value(const ::pi_car::String&) { return value(); }
};


// service_traits::MD5Sum< ::pi_car::StringRequest> should match
// service_traits::MD5Sum< ::pi_car::String >
template<>
struct MD5Sum< ::pi_car::StringRequest>
{
  static const char* value()
  {
    return MD5Sum< ::pi_car::String >::value();
  }
  static const char* value(const ::pi_car::StringRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::pi_car::StringRequest> should match
// service_traits::DataType< ::pi_car::String >
template<>
struct DataType< ::pi_car::StringRequest>
{
  static const char* value()
  {
    return DataType< ::pi_car::String >::value();
  }
  static const char* value(const ::pi_car::StringRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::pi_car::StringResponse> should match
// service_traits::MD5Sum< ::pi_car::String >
template<>
struct MD5Sum< ::pi_car::StringResponse>
{
  static const char* value()
  {
    return MD5Sum< ::pi_car::String >::value();
  }
  static const char* value(const ::pi_car::StringResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::pi_car::StringResponse> should match
// service_traits::DataType< ::pi_car::String >
template<>
struct DataType< ::pi_car::StringResponse>
{
  static const char* value()
  {
    return DataType< ::pi_car::String >::value();
  }
  static const char* value(const ::pi_car::StringResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PI_CAR_MESSAGE_STRING_H
