// Generated by gencpp from file task/Uart.msg
// DO NOT EDIT!


#ifndef TASK_MESSAGE_UART_H
#define TASK_MESSAGE_UART_H

#include <ros/service_traits.h>


#include <task/UartRequest.h>
#include <task/UartResponse.h>


namespace task
{

struct Uart
{

typedef UartRequest Request;
typedef UartResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Uart
} // namespace task


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::task::Uart > {
  static const char* value()
  {
    return "947ef8842683fa73741f136ee7bdbba9";
  }

  static const char* value(const ::task::Uart&) { return value(); }
};

template<>
struct DataType< ::task::Uart > {
  static const char* value()
  {
    return "task/Uart";
  }

  static const char* value(const ::task::Uart&) { return value(); }
};


// service_traits::MD5Sum< ::task::UartRequest> should match
// service_traits::MD5Sum< ::task::Uart >
template<>
struct MD5Sum< ::task::UartRequest>
{
  static const char* value()
  {
    return MD5Sum< ::task::Uart >::value();
  }
  static const char* value(const ::task::UartRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::task::UartRequest> should match
// service_traits::DataType< ::task::Uart >
template<>
struct DataType< ::task::UartRequest>
{
  static const char* value()
  {
    return DataType< ::task::Uart >::value();
  }
  static const char* value(const ::task::UartRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::task::UartResponse> should match
// service_traits::MD5Sum< ::task::Uart >
template<>
struct MD5Sum< ::task::UartResponse>
{
  static const char* value()
  {
    return MD5Sum< ::task::Uart >::value();
  }
  static const char* value(const ::task::UartResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::task::UartResponse> should match
// service_traits::DataType< ::task::Uart >
template<>
struct DataType< ::task::UartResponse>
{
  static const char* value()
  {
    return DataType< ::task::Uart >::value();
  }
  static const char* value(const ::task::UartResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TASK_MESSAGE_UART_H
